{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/HW2.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageContainer","avatarImage","src","avatar","text","personName","name","message","time","messageData","HW1","Affair","affair","affairText","priority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","container","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","console","log","v1","createUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Error404","PATH","Routes","path","exact","render","to","Header","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0c39f9f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__1XJsN\",\"avatarImage\":\"Message_avatarImage__x3gjM\",\"text\":\"Message_text__25lpk\",\"personName\":\"Message_personName__3xaDD\",\"message\":\"Message_message__23Rom\",\"time\":\"Message_time__1yQE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__1pqT_\",\"affairText\":\"Affair_affairText__2xel-\",\"low\":\"Affair_low__1eHwe\",\"middle\":\"Affair_middle__RKSYx\",\"high\":\"Affair_high__ORX5g\",\"deleteButton\":\"Affair_deleteButton__1IzEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__3dgt8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__Mox6O\",\"errorInput\":\"SuperInputText_errorInput__1SzSo\",\"error\":\"SuperInputText_error__yVT9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HW2_container__3fCEx\",\"affairs\":\"HW2_affairs__2yZEJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1FU4X\",\"column\":\"HW4_column__1nQkW\",\"testSpanError\":\"HW4_testSpanError__1fcN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1JLly\",\"red\":\"SuperButton_red__zEORr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Jy22\",\"spanClassName\":\"SuperCheckbox_spanClassName__1p5BT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__DMFH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3_jdS\",\"error\":\"Greeting_error__3M0nF\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\ntype messagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messagePropsType) {\r\n    return (\r\n        <div className={s.messageContainer}>\r\n            <div><img className={s.avatarImage} src={props.avatar} /></div>\r\n            <div className={s.text}>\r\n                <div className={s.personName}><h3>{props.name}</h3></div>\r\n                <p className={s.message}>{props.message}</p>\r\n                <p className={s.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'test message name',\r\n    message: 'test message',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homework 1\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairType } from './HW2';\r\nimport s from './Affair.module.css';\r\nimport { StringMappingType } from 'typescript';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\r\n    const deleteCallback = () => { props.deleteAffairCallback(props.affair._id) }\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <p className={s.affairText}>{props.affair.name} has <span className={s[props.affair.priority]}>{props.affair.priority}</span> priority</p>\r\n            <button className={s.deleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, { Dispatch, SetStateAction } from 'react'\r\nimport Affair from './Affair'\r\nimport { AffairType, FilterType } from './HW2'\r\nimport s from './Affairs.module.css';\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter(\"all\") } // need to fix\r\n    const setHigh = () => { props.setFilter(\"high\") }\r\n    const setMiddle = () => { props.setFilter(\"middle\") }\r\n    const setLow = () => { props.setFilter(\"low\") }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={s.button} onClick={setAll}>All</button>\r\n            <button className={s.button} onClick={setHigh}>High</button>\r\n            <button className={s.button} onClick={setMiddle}>Middle</button>\r\n            <button className={s.button} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, { useState } from 'react'\r\nimport Affairs from './Affairs';\r\nimport s from './HW2.module.css';\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    { _id: 1, name: 'React', priority: 'high' },\r\n    { _id: 2, name: 'anime', priority: 'low' },\r\n    { _id: 3, name: 'games', priority: 'low' },\r\n    { _id: 4, name: 'work', priority: 'high' },\r\n    { _id: 5, name: 'html & css', priority: 'middle' },\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs\r\n    return affairs.filter(affair => affair.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(affair => affair._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.affairs}>\r\n                <hr />\r\n                homework 2\r\n                {/*should work (должно работать)*/}\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                />\r\n\r\n                <hr />\r\n                {/*для личного творчества, могу проверить*/}\r\n                {/*<AlternativeAffairs/>*/}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, { ChangeEvent } from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    { name, setNameCallback, addUser, error, totalUsers } // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} />\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, { useState, ChangeEvent } from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = (props) => {\r\n    const {\r\n        users,\r\n        addUserCallback\r\n    } = props;\r\n\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n\r\n        if (name.trim()) {\r\n            addUserCallback(name);\r\n            setName(\"\");\r\n            setError('');\r\n            alert(`Hello  ${name}!`)\r\n        } else {\r\n            setError('Пожалуйста, укажите имя')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, { useState } from 'react';\r\nimport GreetingContainer from './GreetingContainer';\r\nimport { v1 } from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n\r\n    console.log(users);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const createUser = (name: string) => ({ _id: v1(), name })\r\n        setUsers([...users, createUser(name)])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            homework 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\r\n\r\n            <hr />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n            && e.key === 'Enter' // и если нажата кнопка Enter\r\n            && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        onChange && onChange(e);\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    UP_JUNIOR: '/up-junior'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\r\n                <Route path={PATH.JUNIOR} render={() => <PreJunior />} />\r\n                <Route path={PATH.UP_JUNIOR} render={() => <PreJunior />} />\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404 />} />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PATH } from './Routes';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n            <NavLink to={PATH.PRE_JUNIOR}>To preJunior Page</NavLink>\r\n            <NavLink to={PATH.JUNIOR}>To Junior Page</NavLink>\r\n            <NavLink to={PATH.PRE_JUNIOR}>To upper Junior Page</NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header />\r\n                <Routes />\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\nimport HW6 from '../../../p2-homeworks/h6/HW6';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/* <HW1 /> */}\r\n            {/* <HW2 />  */}\r\n            {/* <HW3 /> */}\r\n            {/* <HW4 /> */}\r\n            <HW5 />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}